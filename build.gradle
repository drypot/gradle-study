plugins {
  id "java"
}

group = "com.drypot"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = "11"


repositories {
  mavenCentral()
}

dependencies {
  compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.28'
  runtime group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.28'
}

task prints {
  doLast {
    println name
    println project.name
    println path
    println projectDir
    println buildDir

    def dest = "dest"
    println dest
  }
}

task testPhase {
  doFirst {
    println "This is executed first during the execution phase."
  }
  doLast {
    println "This is executed last during the execution phase."
  }
  println "This is executed during the configuration phase as well."
}

task helloWorldGradle {
  doLast {
    println "Hello World Gradle !"
  }
}

task helloWorld (type: JavaExec) {
  main = "com.drypot.HelloWorld"
  classpath sourceSets.main.runtimeClasspath
}

task helloWorldSLF (type: JavaExec) {
  main = "com.drypot.HelloWorldSLF"
  classpath sourceSets.main.runtimeClasspath
}

task dumpTimeZone (type: JavaExec){
  main = "com.drypot.DumpTimeZone"
  classpath sourceSets.main.runtimeClasspath
}

task copy (type: Copy) {
  from("copy-test/src")
  into("copy-test/dest")
}

task zip (type: Zip) {
  archiveName "sample.zip"
  from("copy-test/src")
  destinationDir(file("copy-test/zip"))
}

task ensureDirectory {
  doLast {
    mkdir "images"
  }
}

task copyFromStaging (type: Copy) {
  from "src/main/webapp"
  into "$buildDir/explodedWar"
  rename '(.+)-staging(.+)', '$1$2'
}

task myClean (type:Delete) {
  delete buildDir
}

task displayJars {
  doLast {
    configurations.runtime.each {
      println it.name
    }
    //println "${configurations.runtime.collect { File f -> f.name }}"
  }
}

task deleteLibs (type: Delete) {
  delete "libs"
}

task downloadLibs (type: Copy) {
  dependsOn "deleteLibs"
  from configurations.runtime
  into "libs"
}

/*
jar {
  manifest {
    attributes (
      "Main-Class" : "com.drypot.HelloWorld",
      "Implementation-Title" : project.name,
      "Developer"  : "Kyuhyun Park"
    )
  }
}
*/
